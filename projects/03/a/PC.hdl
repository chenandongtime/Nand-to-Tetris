// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // if      (reset[t] == 1) out[t+1] = 0
    Mux16(a =preOut ,b[0..15]=false,sel = reset,out = out0);

    //else if (load[t] == 1)  out[t+1] = in[t]
    Mux(a =load,b=false,sel = reset,out = load0);
    Mux16(a = out0,b = in,sel = load0,out =out1);
   
    //else if (inc[t] == 1)   out[t+1] = out[t] + 1,
    Or(a = reset,b=load,out = reload);
    Mux(a = inc,b=false,sel=reload,out = inc0);
    Add16(a =out1,b[0]=inc0,b[1..15]=false,out = out2);

    //else                    out[t+1] = out[t]
    Or(a=reset,b=load,out = load1);
    Or(a =load1,b = inc,out = load2);

    Register(in = out2,load = load2 ,out = out,out = preOut);
}
